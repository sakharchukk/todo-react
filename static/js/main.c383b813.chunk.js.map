{"version":3,"sources":["components/AppHeader/index.js","components/AppHeader/AppHeader.js","components/SearchPanel/index.js","components/SearchPanel/SearchPanel.js","components/TodoListItem/index.js","components/TodoListItem/TodoListItem.js","components/TodoList/index.js","components/TodoList/TodoList.js","components/ItemStatusFilter/index.js","components/ItemStatusFilter/ItemStatusFilter.js","components/ItemAddForm/index.js","components/ItemAddForm/ItemAddForm.js","components/App/index.js","components/App/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","placeholder","this","onChange","Component","TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","important","classNames","onClick","type","TodoList","todos","element","map","item","id","itemProps","key","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","slice","addItem","text","newItem","toggleProperty","arr","propName","oldItem","items","length","toLowerCase","indexOf","visibleItems","search","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c383b813.chunk.js","sourcesContent":["import AppHeader from \"./AppHeader\";\r\n\r\nexport default AppHeader;","import React from \"react\";\r\nimport \"./AppHeader.css\";\r\n\r\nconst AppHeader = ({toDo, done}) =>{\r\n    return(\r\n        <div className=\"app-header d-flex\">\r\n            <h1>Todo List</h1>\r\n            <h2>{toDo} more to do, {done} done</h2>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default AppHeader;","import SearchPanel from \"./SearchPanel\";\r\n\r\nexport default SearchPanel;","import React, {Component} from \"react\";\r\n\r\nimport \"./SearchPanel.css\";\r\n\r\nexport default class SearchPanel extends Component{\r\n\r\n    state = {\r\n      term: ''\r\n    };\r\n\r\n    onSearchChange = (e) => {\r\n        const term = e.target.value;\r\n        this.setState({term});\r\n        this.props.onSearchChange(term);\r\n    };\r\n\r\n    render() {\r\n        return <input className=\"form-control search-input\" placeholder=\"type to search\"  value={this.state.term}\r\n        onChange={this.onSearchChange}/>;\r\n    }\r\n}\r\n","import TodoListItem from \"./TodoListItem\";\r\n\r\nexport default TodoListItem;","import React, { Component } from \"react\";\r\n\r\nimport \"./TodoListItem.css\";\r\n\r\nexport default class TodoListItem extends Component {\r\n\r\n    render() {\r\n\r\n        const { label, onDeleted, onToggleImportant, onToggleDone, important, done} = this.props;\r\n\r\n        let classNames = \"todo-list-item\";\r\n        if (done){\r\n            classNames += ' done';\r\n        }\r\n\r\n        if (important){\r\n            classNames += ' important';\r\n        }\r\n\r\n        return (\r\n        <span className={classNames}>\r\n              <span className=\"todo-list-item-label\" onClick={ onToggleDone }>{ label }</span>\r\n              <button type=\"button\" className=\"btn btn-outline-success btn-sm float-right\" onClick={onToggleImportant}>\r\n                  <i className=\"fa fa-exclamation\" />\r\n              </button>\r\n\r\n              <button type=\"button\"\r\n                  className=\"btn btn-outline-danger btn-sm float-right\"\r\n                   onClick={onDeleted}>\r\n                  <i className=\"fa fa-trash-o\" />\r\n              </button>\r\n        </span>\r\n        );\r\n    };\r\n}\r\n\r\n\r\n","import TodoList from \"./TodoList\";\r\n\r\nexport default TodoList;","import React from \"react\";\r\n\r\nimport TodoListItem from \"../TodoListItem\";\r\nimport \"./TodoList.css\";\r\n\r\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) =>{\r\n\r\n    const element =  todos.map((item) =>{\r\n\r\n        const {id, ...itemProps} = item;\r\n        return(\r\n            <li className=\"list-group-item\" key={id}>\r\n                <TodoListItem\r\n                    { ...itemProps }\r\n                    onDeleted={() => onDeleted(id)}\r\n                    onToggleImportant = {() => onToggleImportant(id)}\r\n                    onToggleDone = {() => onToggleDone(id)}\r\n            /></li>\r\n        );\r\n    });\r\n    return(\r\n        <ul className=\"list-group todo-list\">\r\n            {element}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import ItemStatusFilter from \"./ItemStatusFilter\";\r\n\r\nexport default ItemStatusFilter;","import React, {Component} from \"react\";\r\nimport \"./ItemStatusFilter.css\";\r\n\r\nexport default class ItemStatusFilter extends Component{\r\n\r\n    buttons = [\r\n        {name: 'all', label: 'All'},\r\n        {name: 'active', label: 'Active'},\r\n        {name: 'done', label: 'Done'},\r\n    ];\r\n\r\n    render(){\r\n\r\n        const {filter, onFilterChange} = this.props;\r\n\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const isActive = filter === name;\r\n            const clazz = isActive ? 'btn-info' : 'btn-outline-secondary';\r\n            return(\r\n              <button type=\"button\" className = {`btn ${clazz}`} key={name} onClick={() => onFilterChange(name)}>{label}</button>\r\n            );\r\n        });\r\n\r\n        return(\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\n\r\n","import ItemAddForm from \"./ItemAddForm\";\r\n\r\nexport default ItemAddForm;","import React, {Component} from \"react\";\r\nimport \"./ItemAddForm.css\";\r\n\r\nexport default class ItemAddForm extends Component{\r\n\r\n    state = {\r\n      label: ''\r\n    };\r\n\r\n    onLabelChange = (e) =>{\r\n        this.setState({\r\n            label: e.target.value\r\n        });\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onItemAdded(this.state.label);\r\n        this.setState({\r\n           label: ''\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <form className=\"item-add-form d-flex\" onSubmit={this.onSubmit}>\r\n                <input type=\"text\" className=\"form-control\" onChange={this.onLabelChange} placeholder=\"What needs to be done\" value={this.state.label}/>\r\n                <button className=\"btn btn-outline-secondary\">Add Item</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import App from './app';\r\n\r\nexport default App;","import React, {Component} from \"react\";\r\n\r\nimport AppHeader from \"../AppHeader\";\r\nimport SearchPanel from \"../SearchPanel\";\r\nimport TodoList from \"../TodoList\";\r\nimport ItemStatusFilter from \"../ItemStatusFilter\";\r\nimport ItemAddForm from \"../ItemAddForm\";\r\n\r\nimport \"./app.css\";\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n    maxId = 100;\r\n\r\n    state = {\r\n        todoData: [\r\n            this.createTodoItem(\"Drink Coofee\"),\r\n            this.createTodoItem(\"Make awesome App\"),\r\n            this.createTodoItem(\"Have a lunch\")\r\n        ],\r\n        term: '',\r\n        filter: 'all'\r\n    };\r\n\r\n        createTodoItem(label){\r\n            return{\r\n                label,\r\n                important: false,\r\n                done: false,\r\n                id: this.maxId++\r\n            };\r\n        }\r\n\r\n        deleteItem = (id) =>{\r\n            this.setState(({ todoData }) => {\r\n                const idx = todoData.findIndex((el) => el.id === id);\r\n\r\n                const newArray = [\r\n                    ...todoData.slice(0, idx),\r\n                    ...todoData.slice(idx + 1)\r\n                ];\r\n\r\n                return {\r\n                  todoData: newArray\r\n                };\r\n            });\r\n        };\r\n\r\n        toggleProperty(arr, id, propName){\r\n            const idx = arr.findIndex((el) => el.id === id);\r\n\r\n            const oldItem = arr[idx];\r\n            const newItem = {...oldItem, [propName]: !oldItem[propName]};\r\n\r\n            return[\r\n                ...arr.slice(0, idx),\r\n                newItem,\r\n                ...arr.slice(idx + 1)\r\n            ];\r\n        };\r\n\r\n        addItem = (text) => {\r\n            const newItem = this.createTodoItem(text);\r\n\r\n            this.setState(({todoData}) =>{\r\n                const newArr = [\r\n                    ...todoData,\r\n                    newItem\r\n                ];\r\n                return{\r\n                    todoData: newArr\r\n                }\r\n            });\r\n        };\r\n\r\n        onToggleImportant = (id) => {\r\n            this.setState(({ todoData }) => {\r\n                return{\r\n                    todoData: this.toggleProperty(todoData, id, \"important\")\r\n                };\r\n            });\r\n        };\r\n\r\n        onToggleDone = (id) => {\r\n            this.setState(({ todoData }) => {\r\n                return{\r\n                    todoData: this.toggleProperty(todoData, id, \"done\")\r\n                };\r\n            });\r\n        };\r\n\r\n        onSearchChange = (term) =>{\r\n            this.setState({term});\r\n        };\r\n\r\n    onFilterChange = (filter) =>{\r\n        this.setState({filter});\r\n    };\r\n\r\n        search(items, term){\r\n            if(term.length === 0){\r\n                return items;\r\n            }\r\n            return items.filter((item) => {\r\n                return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n            });\r\n        };\r\n\r\n        filter(items, filter){\r\n            switch (filter) {\r\n                case 'all':\r\n                    return items;\r\n                case 'active':\r\n                    return items.filter((item) => !item.done);\r\n                case 'done':\r\n                    return items.filter((item) => item.done);\r\n                default:\r\n                    return items\r\n            }\r\n        };\r\n\r\n        render() {\r\n            const {todoData, term, filter} = this.state;\r\n\r\n            const visibleItems = this.filter(this.search(todoData, term), filter);\r\n\r\n            const doneCount = todoData.filter((el) => el.done).length;\r\n            const  todoCount = todoData.length - doneCount;\r\n\r\n            return (\r\n                <div className=\"todo-app\">\r\n                    <AppHeader toDo={todoCount} done={doneCount}/>\r\n                    <div className=\"top-panel d-flex\">\r\n                        <SearchPanel onSearchChange = {this.onSearchChange}/>\r\n                        <ItemStatusFilter filter={filter} onFilterChange = {this.onFilterChange}/>\r\n                    </div>\r\n                    <TodoList\r\n                         todos={visibleItems}\r\n                         onDeleted={this.deleteItem}\r\n                         onToggleImportant={this.onToggleImportant}\r\n                         onToggleDone = {this.onToggleDone}/>\r\n\r\n                     <ItemAddForm onItemAdded = {this.addItem}/>\r\n                </div>\r\n            );\r\n        };\r\n};\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}